To build, all build files are in ./build-files/
Build commands should be run from ./build-files/ folder

>> docker build -f ubuntu-base.docker -t ubuntu-base .

>> docker run -it --hostname=Rapidash-Docker --name=repos-container ubuntu-base
    * clone all repos that require passwords

    BEFORE EXITING THE INTERACTIVE SESSION SAVE CURRENT IMAGE IN ANOTHER WINDOW:
    >> docker save -o repos.save ubuntu-base
    * then can exit from interactive session using ">> exit"

now make the image based on the container
    >> docker commit -m "repos cloned" repos-container repos

Then to load this image with all the changes that were made during the interactive session:
(should not need to do this because it can just be committed)
    >> docker load -i repos.save

To go back into the interactive mode of that container:
    >> docker start -i repos-container

ALL REPOS SHOULD BE CLONED THAT ARE PASSWORD PROTECTED - continue with dockerfiles

>> docker build -f openmpi.docker -t openmpi .
>> docker build -f qt.docker -t qt .
>> docker build -f hdf5.docker -t hdf5 .
>> docker build -f silo.docker -t silo .
>> docker build -f moab.docker -t moab .

Build image with data in directory above - DON'T NEED THIS ANYMORE - run with mount instead
>> docker build -f data.docker -t data ..

Now build whichever version of exnihilo is appropriate (from build-files folder)
>> docker build -f exnihilo-debug.docker -t exnihilo-debug .
>> docker build -f exnihilo-release.docker -t exnihilo-release .

Build the environment in which to run it:
>> docker build -f run-exnihilo.docker -t run-exnihilo-release .
>> docker build -f run-exnihilo-debug.docker -t run-exnihilo-debug .

## PATH
export PATH=/install/qt/bin:/install/openmpi/bin:/install/silo/bin:/install/hdf5/bin/:install/moab/bin:$PATH
export LD_LIBRARY_PATH=/install/qt/lib:/install/openmpi/lib:/install/silo/lib:/install/hdf5/lib/:install/moab/lib:$LD_LIBRARY_PATH
export PATH=/install/<EXNIHILO BUILD>/bin/:$PATH
export LD_LIBRARY_PATH=/install/<EXNIHILO BUILD>/lib/:$LD_LIBRARY_PATH
export PYTHONPATH=/install/<EXNIHILO BUILD>/python/:$PYTHONPATH

# packages needed to install for running Denovo with python
apt-get install python-matplotlib python-h5py

HOW TO MOUNT

docker run -it --hostname=$HOSTNAME -v /path/on/host/:/path/in/docker --name=$CONTAINERNAME <image-name>

EXAMPLE FOR RUNNING EXNIHILO as user
>> docker run -it --hostname=rapidash-docker -v /home/kkiesling/Pokeball/Documents/CNERG/thesis/:/home/kkiesling/denovo-trial -v /home/kkiesling/Pokeball/Documents/CNERG/ORNL/scale-data:/scale-data/ --user=kkiesling --name=run-ex run-exnihilo-release
>> docker run -it --hostname=rapidash-docker -v /home/kkiesling/Pokeball/Documents/CNERG/thesis/:/home/kkiesling/denovo-trial -v /home/kkiesling/Pokeball/Documents/CNERG/ORNL/scale-data:/scale-data/ --user=kkiesling --name=run-ex-debug run-exnihilo-debug 

FOR RUNNING FOR DEVELOPMENT PURPOSES:
>> docker run -it --hostname=Rapidash-Docker --name=exnihilo-development exnihilo-debug
>> docker commit -m "updated development" exnihilo-development exnihilo-debug
